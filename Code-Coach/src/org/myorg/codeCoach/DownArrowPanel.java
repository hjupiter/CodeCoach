/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.myorg.codeCoach;

import java.io.IOException;
import java.util.Collection;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.text.Document;
import org.netbeans.api.java.source.CompilationController;
import org.netbeans.api.java.source.JavaSource;
import org.netbeans.api.java.source.Task;
import org.openide.awt.StatusDisplayer;
import org.openide.filesystems.FileObject;
import org.openide.loaders.DataObject;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.Utilities;
import org.openide.util.WeakListeners;

/**
 *
 * @author JoycePC
 */
public class DownArrowPanel extends javax.swing.JPanel implements LookupListener{
    
    private Lookup.Result<DataObject> projects;
    private DataObject context;
    private boolean buttonStatus; //activated (1) desactivated (0)
    
    public DownArrowPanel() {
        initComponents();
        projects = Utilities.actionsGlobalContext().lookupResult(DataObject.class);
        projects.addLookupListener(
                WeakListeners.create(LookupListener.class, this, projects));
        resultChanged(new LookupEvent(projects));
        this.buttonStatus=false;
    }
@Override
    public void resultChanged(LookupEvent le) {
        Collection<? extends DataObject> p = projects.allInstances();
        if (p.size() == 1) {
            DataObject currentProject = p.iterator().next();
            this.context = currentProject;        
        }
    }
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataProcess = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        arrow = new javax.swing.JToggleButton();
        runButton = new java.awt.Button();

        dataProcess.setMinimumSize(new java.awt.Dimension(200, 200));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DownArrowPanel.class, "DownArrowPanel.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout dataProcessLayout = new javax.swing.GroupLayout(dataProcess.getContentPane());
        dataProcess.getContentPane().setLayout(dataProcessLayout);
        dataProcessLayout.setHorizontalGroup(
            dataProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dataProcessLayout.setVerticalGroup(
            dataProcessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        arrow.setIcon(new javax.swing.ImageIcon("C:\\Users\\e014hp\\Documents\\NetBeansProjects\\Code-Coach\\icon\\barrow16.png")); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(arrow, org.openide.util.NbBundle.getMessage(DownArrowPanel.class, "DownArrowPanel.arrow.text")); // NOI18N
        arrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrowActionPerformed(evt);
            }
        });

        runButton.setActionCommand(org.openide.util.NbBundle.getMessage(DownArrowPanel.class, "DownArrowPanel.runButton.actionCommand")); // NOI18N
        runButton.setLabel(org.openide.util.NbBundle.getMessage(DownArrowPanel.class, "DownArrowPanel.runButton.label")); // NOI18N
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(arrow, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(arrow, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
            .addComponent(runButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void activityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activityButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_activityButtonActionPerformed

    private void arrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrowActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        // TODO add your handling code here:
        if(context!=null){
            final FileObject fileObject = context.getPrimaryFile(); 
            JavaSource javaSource = JavaSource.forFileObject(fileObject); 
            if (javaSource == null) { 
                StatusDisplayer.getDefault().setStatusText("The item selected is not a source file: " + fileObject.getPath()); 
            } else { 
                try { 
                    javaSource.runUserActionTask(new Task<CompilationController>() { 
                        public void run(CompilationController arg0) throws Exception { 
                            arg0.toPhase(JavaSource.Phase.ELEMENTS_RESOLVED); 
                            Document document = arg0.getDocument(); 
                            if (document != null && !buttonStatus) {
                                StatusDisplayer.getDefault().setStatusText("Analysing the source file: " + fileObject.getPath());
                                JPanel panel = new DataProcessing();
                                JFrame frame = new JFrame();
                                Object[] options = { "CONTINUE", "CANCEL" };
                                Icon icon = new ImageIcon("icon/icontech.png");
                                JOptionPane JOpPane = new JOptionPane();
                                JOpPane.showOptionDialog(frame,panel, "Analysing source file", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, icon , options, options[0]);
                            } else if(document != null && buttonStatus){
                                JPanel panel = new endAnalysis();
                                JFrame frame = new JFrame();
                                Object[] options = { "STOP","CONTINUE"};
                                Icon icon = new ImageIcon("icon/icontech.png");
                                JOptionPane JOpPane = new JOptionPane();
                                JOpPane.showOptionDialog(frame,panel, "Analysing source file", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, icon , options, options[0]);
                            }else{ 
                                StatusDisplayer.getDefault().setStatusText("The source file is not open!"); 
                            } 
                        } 
                    }, true);
                } catch (IOException ex) { 
                    Exceptions.printStackTrace(ex); 
                } 
            }
        }else{StatusDisplayer.getDefault().setStatusText("No file has been selected"); }
    }//GEN-LAST:event_runButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton arrow;
    private javax.swing.JFrame dataProcess;
    private javax.swing.JLabel jLabel1;
    private java.awt.Button runButton;
    // End of variables declaration//GEN-END:variables
}
